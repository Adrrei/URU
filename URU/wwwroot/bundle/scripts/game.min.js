var connection = new signalR.HubConnectionBuilder().withUrl('/gameHub').configureLogging(signalR.LogLevel.None).build();

connection.start().catch(function (err) {
    return console.error(err.toString());
});

async function start() {
    try {
        await connection.start();
        console.log('Reconnected');
    } catch (err) {
        setTimeout(() => start(), 5000);
    }
}

connection.onclose(async () => {
    await start();
});

connection.on('ReceiveWinner', function (winner) {
    if (winner === 'X') {
        let score = document.getElementById('player1').textContent;
        document.getElementById('player1').textContent = parseInt(score) + Number(1);
    } else if (winner === 'O') {
        let score = document.getElementById('player2').textContent;
        document.getElementById('player2').textContent = parseInt(score) + Number(1);
    }

    drawBoard();
});

connection.on('ReceiveBoard', function (board) {
    var gameBoard = document.getElementById('gameBoard').children;

    for (let i = 0; i < 3; i++) {
        var elements = gameBoard[i].getElementsByTagName('td');
        for (let j = 0; j < elements.length; j++) {
            elements[j].textContent = board[i][j];
        }
    }
});

connection.on('Activity', function (context) {
    var activePlayers = document.getElementById('gameLog');
    activePlayers.innerHTML = '';

    for (var key in context) {
        activePlayers.innerHTML += '<br/>' + context[key];
    }

});

document.getElementById('gameId').addEventListener('input', function () {
    joinRoom();
});

var previousRoom = '';

function joinRoom() {
    var room = document.getElementById('gameId').value;

    connection.invoke('AddToGroup', previousRoom, room);
    connection.invoke('UpdateBoard', room, -1, -1);

    document.getElementById('gameRoom').textContent = room;
    previousRoom = room;
}

window.onload = function () {
    drawBoard();
};

function drawBoard() {
    var board = document.getElementById('gameBoard');

    while (board.hasChildNodes()) {
        board.removeChild(board.firstChild);
    }

    var counter = 1;
    for (let x = 0; x < 3; x++) {
        var row = document.createElement('tr');
        row.classList.add('row');

        for (let y = 0; y < 3; y++) {
            var col = document.createElement('td');
            col.id = counter;
            col.innerHTML = counter;

            var handler = function () {
                var room = document.getElementById('gameRoom').textContent;
                connection.invoke('UpdateBoard', room, x, y);
                connection.invoke('CheckWinner', room);
            };

            col.addEventListener('click', handler);

            row.appendChild(col);
            counter++;
        }

        board.appendChild(row);
    }
}