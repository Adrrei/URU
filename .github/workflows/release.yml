name: Release

on:
  push:
    branches:
      - master

jobs:
  release:
    env:
      IMAGE_NAME: uru
      APP_NAME: uruno
      TESTS_PROJECT: URU.Tests/URU.Tests.csproj
    name: Azure Container Registry
    runs-on: ubuntu-20.04

    steps:

    - name: A) Checkout
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: B) Fetch Tags
      run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      
    - name: C) Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'

    - name: D) Run Tests
      run: dotnet test ${{ env.TESTS_PROJECT }} --configuration Release
      working-directory: ./tests
      env:
        SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
        SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}

    - name: E) Semantic Release
      run: npx -p @semantic-release/changelog -p @semantic-release/git -p semantic-release semantic-release
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    - name: F1) Set New Release (step 1)
      run: |
        echo "LAST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_ENV

    - name: F2) Set New Release (step 2)
      run: |
        echo "RELEASE_VERSION=${{ env.LAST_TAG:1 }}" >> $GITHUB_ENV
        
    - name: G) Print Release Version
      run: |
        echo Release Version: ${{ env.RELEASE_VERSION }}

    - name: H) Login via Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: I) Azure Docker Login
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_SERVER }}
        username: ${{ secrets.REGISTRY_NAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: J) Docker Images to Azure Container Registry
      if: success()
      run: |
        echo ${{ secrets.REGISTRY_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
        docker build -t ${{ secrets.REGISTRY_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }} --build-arg versionNumber=${{ env.RELEASE_VERSION }} .
        docker tag ${{ secrets.REGISTRY_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }} ${{ secrets.REGISTRY_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.run_number }}
        docker push ${{ secrets.REGISTRY_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.run_number }}
        docker push ${{ secrets.REGISTRY_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}

    - name: K) Deploy to Azure WebApp for Containers
      if: success()
      uses: azure/webapps-container-deploy@v1
      with:
        app-name: ${{ env.APP_NAME }}
        images: ${{ secrets.REGISTRY_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
    
    - name: L) Azure Logout
      if: always()
      run: az logout
